name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: hack-aso-grupo-11 # TODO: update Google Cloud project id
  GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
  REPOSITORY: spotmusicrepository # TODO: update Artifact Registry repository name
  SERVICE: hack-aso-gp11-back # TODO: update Cloud Run service name
  REGION: us-central1 # TODO: update Cloud Run service region

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy Backend no  Cloud Run
        id: deploy
        run: |-
          gcloud run deploy backend \
            --quiet \
            --region  ${{ secrets.GOOGLE_REGION }} \
            --image ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest \
            --platform managed \
            --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }},CLOUD_SQL_DATABASE_NAME=${{ secrets.CLOUD_SQL_DATABASE_NAME }},CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }},CLOUD_SQL_USERNAME=${{ secrets.CLOUD_SQL_USERNAME }} \
            --allow-unauthenticated \
            --project ${{ secrets.GOOGLE_PROJECT_ID }} \
            --format json

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}